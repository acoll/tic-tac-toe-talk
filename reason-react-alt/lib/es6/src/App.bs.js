// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ReasonReact from "reason-react/lib/es6/src/ReasonReact.js";
import * as Board$ReactTemplate from "./Board.bs.js";
import * as Fragment$ReactTemplate from "./Fragment.bs.js";
import * as GameState$ReactTemplate from "./GameState.bs.js";

((require('../../../src/App.scss')));

var component = ReasonReact.statelessComponent("App");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, GameState$ReactTemplate.make((function (board, player, winner, isTie, placeMarker, reset) {
                                return ReasonReact.element(/* None */0, /* None */0, Fragment$ReactTemplate.make(/* array */[
                                                winner ? React.createElement("header", {
                                                        className: "active"
                                                      }, winner[0] + " won!") : (
                                                    isTie ? React.createElement("header", {
                                                            className: "active"
                                                          }, "Tie Game") : React.createElement("header", undefined, player + "'s Turn")
                                                  ),
                                                React.createElement("button", {
                                                      onClick: reset
                                                    }, "reset"),
                                                ReasonReact.element(/* None */0, /* None */0, Board$ReactTemplate.make(board, placeMarker, /* array */[]))
                                              ]));
                              })));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

export {
  component ,
  make ,
  
}
/*  Not a pure module */
